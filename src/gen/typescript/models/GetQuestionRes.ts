/* tslint:disable */
/* eslint-disable */
/**
 * CoWorkerMatch API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Question } from './Question';
import {
    QuestionFromJSON,
    QuestionFromJSONTyped,
    QuestionToJSON,
} from './Question';

/**
 * 
 * @export
 * @interface GetQuestionRes
 */
export interface GetQuestionRes {
    /**
     * 
     * @type {Array<Question>}
     * @memberof GetQuestionRes
     */
    questions: Array<Question>;
}

/**
 * Check if a given object implements the GetQuestionRes interface.
 */
export function instanceOfGetQuestionRes(value: object): value is GetQuestionRes {
    if (!('questions' in value) || value['questions'] === undefined) return false;
    return true;
}

export function GetQuestionResFromJSON(json: any): GetQuestionRes {
    return GetQuestionResFromJSONTyped(json, false);
}

export function GetQuestionResFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetQuestionRes {
    if (json == null) {
        return json;
    }
    return {
        
        'questions': ((json['questions'] as Array<any>).map(QuestionFromJSON)),
    };
}

export function GetQuestionResToJSON(value?: GetQuestionRes | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'questions': ((value['questions'] as Array<any>).map(QuestionToJSON)),
    };
}

